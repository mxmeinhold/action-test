name: Trigger Builds

on: 
  release:
    types:
      - released

jobs:
  trigger_build:
    name: trigger build
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: get commit
        id: commit
        run: |
          commit_url=$(jq -r '.repository.git_commits_url' $GITHUB_EVENT_PATH | sed 's/{.*}/\/${{ github.sha }}/')
          curl --request GET \
            --silent \
            --show-error \
            --url "$commit_url" \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --fail > commit-out
          jq -C '.' commit-out
          echo "::set-output name=committer::$(jq '.committer' commit-out)"
          echo "::set-output name=author::$(jq '.author' commit-out)"

      - name: format payload
        run: |
          cat $GITHUB_EVENT_PATH | jq '{ git: { uri: .repository.html_url, ref: "main", commit: "${{ github.sha }}", author: ${{ steps.commit.outputs.author }}, committer: ${{ steps.commit.outputs.committer }} } }' > payload.json
          jq -C '.' payload.json

      - name: trigger build
        id: hook
        env:
          OKD_BUILD_HOOK: ${{ secrets.OKD_BUILD_HOOK }}
        run: |
          curl --insecure --silent --show-error --header "Content-Type: application/json" --request POST --data @payload.json "$OKD_BUILD_HOOK" > curl-out
          jq -C '.' curl-out || (cat curl-out; false)
          echo "::set-output name=kind::$(jq '.kind' curl-out)"

      - name: test http code
        if: steps.hook.outputs.kind == 'kind'
        run: "[ `jq '.code' curl-out` -lt 400 ]"

      - name: test status
        if: steps.hook.outputs.kind == 'kind'
        run: "[ `jq '.status' curl-out` == 'Success' ]"

      - name: test if skipped
        if: steps.hook.outputs.kind == 'kind'
        run: "[[ `jq '.message' curl-out` != *skipping* ]]"


# {
#   "kind": "Status",
#   "apiVersion": "v1",
#   "metadata": {
#     
#   }/,
#   "status": "Success",
#   "message": "skipping build. Branch reference from \"yeet-now-insecure\" does not match configuration",
#   "code": 200
# }

# git:
#   uri: "<url to git repository>"
#   ref: "<optional git reference>"
#   commit: "<commit hash identifying a specific git commit>"
#   author:
#     name: "<author name>"
#     email: "<author e-mail>"
#   committer:
#     name: "<committer name>"
#     email: "<committer e-mail>"
#   message: "<commit message>"
# env: 
#    - name: "<variable name>"
#      value: "<variable value>"
